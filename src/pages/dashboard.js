import Button from "@material-ui/core/Button"
import "../assets/css/styles.css"
import { navigate } from "gatsby"
//import { localStorageMemory } from "localstorage-memory"
import Adashblock from "../components/adashblock"
import Head from "../components/Head/Head"
import React, { useEffect, useState } from "react"
import CheckCircleIcon from "@material-ui/icons/CheckCircle"
import { Link } from "gatsby"
import axios from "axios"
import "react-phone-input-2/lib/style.css"
import ProgressBar from "../components/progress"
import { ToastContainer, toast } from "react-toastify"
import "react-toastify/dist/ReactToastify.css"
import * as path from "path"
import { v4 as uuidv4 } from "uuid"

if (typeof window !== "undefined") {
  //if there  are null values for answers in localstorage set it to empty strings
  if (localStorage.getItem("1") == null) {
    localStorage.setItem("1", "")
    localStorage.setItem("2", "")
    localStorage.setItem("3", "")
    localStorage.setItem("4", "")
    localStorage.setItem("5", "")
  }
} else {
  //console.log("we are running on the server")
}

const Dashboard = () => {

  //Correct answers for questions
  let q1A = ["We are not concerned about employees leaving"]
  let q2A = ["They are sharing information perfectly"]
  let q3A = [
    "By enforcing vacations where the employee canâ€™t communicate with the company",
    "By moving employees to a different location where employee can communicate with company",
  ]
  let q4A = [
    "We train and motivate employees to share information",
    "We have processes and systems to share information",
    "We make knowledge sharing a part of the annual/quarterly evaluation process",
  ]

  //questions variables
  var q1
  var q2
  var q3
  var q4

  //state to store and set progress bar value
  const [completed, setCompleted] = useState(0)
  var comp = 0
  // progress bar calculating function
  const completedup = val => {
    comp = comp + val
    setCompleted(comp)
    if (comp > 96) {
      setCompleted(100)
    }
  }


  //store question value in variable to show on dashboard "More Details"
  if (typeof window !== "undefined") {
    q1 = localStorage.getItem("1").split(",").filter(Boolean)

    q2 = localStorage.getItem("2").split(",").filter(Boolean)

    q3 = localStorage.getItem("3").split(",").filter(Boolean)

    q4 = localStorage.getItem("4").split(",").filter(Boolean)
  }

  //Toast for please wait status
  const waittoast = () => {
    toast.success("Please wait!", {
      className: "custom-toast",
      draggable: "true",
      closeOnClick: "true",
      position: toast.POSITION.TOP_CENTER,
    })
  }

  //Toast for error status
  const errortoast = () => {
    toast.error("Something went Wrong!", {
      className: "custom-toast",
      draggable: "true",
      closeOnClick: "true",

      position: toast.POSITION.TOP_CENTER,
    })
  }

  //Function run when selecting a package. Passing selected package as parameter
  //Store data to dynamoDB through API call
  const selectOPtion = option => {
    let id = uuidv4()
    let user
    let questions
    let selectedPackage
    let config

    if (typeof window !== "undefined") {
      //store question from local storage
      let q1raw = localStorage.getItem("1").split(",").filter(Boolean)
      let q2raw = localStorage.getItem("2").split(",").filter(Boolean)
      let q3raw = localStorage.getItem("3").split(",").filter(Boolean)
      let q4raw = localStorage.getItem("4").split(",").filter(Boolean)
      let q5raw = localStorage.getItem("5").split(",").filter(Boolean)
      let q6raw = localStorage.getItem("6").split(",").filter(Boolean)
      let q7raw = localStorage.getItem("7").split(",").filter(Boolean)

      //set selected package in local storage
      localStorage.setItem("package", option)
      //set a unique id generated by uuid in local storage
      localStorage.setItem("id", id)

      //get current user, questoin and selected package
      user = JSON.parse(localStorage.getItem("user"))
      questions = { q1: q1raw, q2: q2raw, q3: q3raw, q4: q4raw, q5: q5raw, q6: q6raw, q7: q7raw }
      selectedPackage = localStorage.getItem("package")

      config = { questions: questions, selectedPackage: selectedPackage, score: completed }
    }

    //get date and time
    var datetime = new Date().toISOString();

    //data to be send to API
    let data = {
      id: id,
      createdAt: datetime,
      name: user.name,
      email: user.email,
      phone: user.phone,
      config: config,
    }

    //store data in localstorage
    if (typeof window !== "undefined") {
      localStorage.setItem("data", JSON.stringify(data))
    }

    //call an API post to a lamda function to store values in dynamoDB
    waittoast()
    return new Promise((resolve, reject) => {
      return axios
        .post(
          path.join(
            `https://63n876u8g1.execute-api.ap-south-1.amazonaws.com/dev/userdata/`,
            id
          ),
          data
        )
        .then(result => {
          resolve({ code: 200, message: result.data.message })
          console.log(result)
          if (typeof window !== "undefined") {
            // localStorage.setItem("id", JSON.stringify(result.config.data.id))
            console.log(result.config.data)
          }
          navigate("/thanks")
        })
        .catch(err => {
          console.log("Failed", err)
          errortoast()
          reject({ code: 0, error: err })
        })
    })
  }

  const [showDetail, setShowdetail] = useState(false)
  return (
    <>
      <Head />
      <div className="container h-100">
        <div className=" h-100">
          <ToastContainer
            style={{ color: "white", fontWeight: "500", textAlign: "center" }}
          />
          <div className="dashboard col-lg-12 mx-auto">
            <h2 className="pricingTitle">
              Dashboard
              <hr
                style={{
                  border: "4px solid #2F2E2E",
                  width: "7%",
                  borderRadius: "5px",
                }}
              />
            </h2>
            <div className="mainQ" style={{ width: "inherit" }}>
              <p
                style={{
                  fontWeight: "500",
                  fontSize: "25px",
                  marginTop: "20px",
                }}
              >
                Your Score
              </p>
              <p
                style={{
                  fontWeight: "500",
                  fontSize: "40px",
                  color: completed > 70 ? "#1abc9c" : "#f1c40f",
                }}
              >
                {completed}%
              </p>
              <ProgressBar bgcolor={"#1abc9c"} completed={completed} />
              <p
                style={{
                  margin: "10",
                  backgroundColor: "rgba(255, 127, 80, 0.301)",
                  width: "fit-content",
                  padding: "7px",
                  fontWeight: "500",
                  cursor: "pointer",
                  display: !showDetail ? "inline-flex" : "none",
                }}
                onClick={() => setShowdetail(true)}
              >
                Show Details +
              </p>
              <p
                style={{
                  margin: "10",
                  backgroundColor: "rgba(82, 82, 82, 0.301)",
                  width: "fit-content",
                  cursor: "pointer",
                  padding: "7px",
                  display: showDetail ? "inline-flex" : "none",
                }}
                onClick={() => setShowdetail(false)}
              >
                Hide Details -
              </p>
              <div style={{ display: showDetail ? "block" : "none" }}>
                <div className="qSection col-md-12 col-lg-6">
                  <div className="questionBlock2">
                    <h4>
                      When an employee leaves what is/are the biggest concern/s?
                    </h4>
                  </div>
                  <div className="answerBlock">
                    {q1 &&
                      q1.map((object, index) => (
                        <Adashblock
                          answers={object}
                          index={index}
                          correctA={q1A}
                          completed={completedup}
                        />
                      ))}
                  </div>
                </div>
                <div className="qSection col-md-12 col-lg-6">
                  <div className="questionBlock2">
                    <h4>What prevents employees from sharing information?</h4>
                  </div>
                  <div className="answerBlock">
                    {q2 &&
                      q2.map((object, index) => (
                        <Adashblock
                          answers={object}
                          index={index}
                          correctA={q2A}
                          completed={completedup}
                        />
                      ))}
                  </div>
                </div>
                <div className="qSection col-md-12 col-lg-6">
                  <div className="questionBlock2">
                    <h4>
                      How do you test how the company will function in the
                      absence of the key employee?
                    </h4>
                  </div>
                  <div className="answerBlock">
                    {q3 &&
                      q3.map((object, index) => (
                        <Adashblock
                          answers={object}
                          index={index}
                          correctA={q3A}
                          completed={completedup}
                        />
                      ))}
                  </div>
                </div>
                <div className="qSection col-md-12 col-lg-6">
                  <div className="questionBlock2">
                    <h4>
                      What is being done by the company to ensure that knowledge
                      about company processes are shared?
                    </h4>
                  </div>
                  <div className="answerBlock">
                    {q4 &&
                      q4.map((object, index) => (
                        <Adashblock
                          answers={object}
                          index={index}
                          correctA={q4A}
                          completed={completedup}
                        />
                      ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className="mainPricing">
            <h2 className="freepricingTitle text-center">
              What package you would like to go?
              <hr
                style={{
                  border: "4px solid #2F2E2E",
                  width: "7%",
                  borderRadius: "5px",
                }}
              />
            </h2>

            <div className="row h-100">
              <div className="col-md-4 col-xl-4 mx-auto">
                <div className="pricingBlock">
                  <div
                    className="priceName"
                    style={{ backgroundColor: "#1ABC9C" }}
                  >
                    <p className="priceType" style={{ marginBottom: "-10px" }}>
                      FREE
                    </p>
                    <hr
                      style={{ width: "80%", border: "2px solid white" }}
                    ></hr>
                    <p className="Pricevalue">$0</p>
                    <p>per month</p>
                  </div>
                  <div className="pBody my-auto">
                    <div className="priceBody">
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />
                        <p>Free 30 min Consultation</p>
                      </div>
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />{" "}
                        <p>Discuss problems to work towards solutions</p>
                      </div>
                    </div>
                    <div className="select">
                      <center>
                        <Button
                          className="site-btn login-btn freefix"
                          variant="contained"
                          onClick={() => {
                            selectOPtion("Free")
                          }}
                          size="small"
                          style={{
                            backgroundColor: "#1ABC9C",
                            color: "#ffffff",
                            fontSize: "15px",
                            fontWeight: "bold",
                          }}
                        // startIcon={<DoneIcon />}
                        >
                          SELECT
                        </Button>
                      </center>
                    </div>
                  </div>
                </div>
              </div>
              <div className="col-md-4 col-xl-4 mx-auto">
                <div className="pricingBlock">
                  <div
                    className="priceName"
                    style={{ backgroundColor: "#FF4F5A" }}
                  >
                    <p className="priceType" style={{ marginBottom: "-10px" }}>
                      Professional
                    </p>
                    <hr
                      style={{ width: "80%", border: "2px solid white" }}
                    ></hr>
                    <p className="Pricevalue">$990</p>
                    <p>per month</p>
                  </div>
                  <div className="pBody my-auto">
                    <div className="priceBody">
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />
                        <p>Lifetime access to course material</p>
                      </div>
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />{" "}
                        <p>
                          Weekly Zoom calls with the class to discuss issues
                        </p>
                      </div>
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />{" "}
                        <p>Interview with experts for live case studies</p>
                      </div>
                    </div>
                    <div className="select">
                      <center>
                        <Button
                          className="site-btn login-btn freefix"
                          variant="contained"
                          onClick={() => {
                            selectOPtion("Professional")
                          }}
                          size="small"
                          style={{
                            backgroundColor: "#FF4F5A",
                            color: "#ffffff",
                            fontSize: "15px",
                            fontWeight: "bold",
                          }}
                        // startIcon={<DoneIcon />}
                        >
                          SELECT
                        </Button>
                      </center>
                    </div>
                  </div>
                </div>
              </div>
              <div className="col-md-4 col-xl-4 mx-auto">
                <div className="pricingBlock">
                  <div
                    className="priceName"
                    style={{ backgroundColor: "#F1C40F" }}
                  >
                    <p className="priceType" style={{ marginBottom: "-10px" }}>
                      Starter
                    </p>
                    <hr
                      style={{ width: "80%", border: "2px solid white" }}
                    ></hr>
                    <p className="Pricevalue">$250</p>
                    <p>per month</p>
                  </div>
                  <div className="pBody my-auto">
                    <div className="priceBody">
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />
                        <p>Workbook to build knowledge management plan</p>
                      </div>
                      <div style={{ display: "flex" }}>
                        <CheckCircleIcon />{" "}
                        <p>Zoom recordings of interviews with experts</p>
                      </div>
                    </div>
                    <div className="select">
                      <center>
                        <Button
                          className="site-btn login-btn freefix"
                          variant="contained"
                          onClick={() => {
                            selectOPtion("Starter")
                          }}
                          size="small"
                          style={{
                            backgroundColor: "#F1C40F",
                            color: "#ffffff",
                            fontSize: "15px",
                            fontWeight: "bold",
                          }}
                        // startIcon={<DoneIcon />}
                        >
                          SELECT
                        </Button>
                      </center>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div style={{ marginTop: "5em" }}></div>
    </>
  )
}

export default Dashboard
